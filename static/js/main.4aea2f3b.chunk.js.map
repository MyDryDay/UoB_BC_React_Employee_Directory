{"version":3,"sources":["components/Search.js","components/Header.js","components/TableRow.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","className","type","placeholder","aria-label","onKeyUp","e","fullName","target","value","trim","toLowerCase","keycode","searchFunct","Header","TableRow","src","picture","thumbnail","alt","name","title","first","last","dob","age","location","country","email","phone","Table","sort","header","textContent","sortFunct","category","onClick","employees","map","employee","login","uuid","App","state","filteredList","ascending","search","query","filtered","filter","includes","setState","sortAsc","arr","a","b","personA","personB","localeCompare","sortDesc","sortAgeAsc","sortAgeDesc","sortCountryAsc","countryA","countryB","sortCountryDesc","axios","get","then","res","data","results","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4aea2f3b.chunk.js","sourcesContent":["// import react\r\nimport React from 'react';\r\n// Create functional Search component\r\n// Function to search data in the table\r\nfunction Search(props){\r\n\r\n    const searchFunct = (e) => {\r\n        // Converts whatever is typed in the search bar into a lower case string\r\n        const fullName = e.target.value.trim().toLowerCase();\r\n        // If backspace is pressed to remove part of the search query, re-render\r\n        if(e.keycode === 8){\r\n            props.searchFunct(fullName);\r\n        }\r\n        props.searchFunct(fullName);\r\n    }\r\n\r\n    return (\r\n        <form className='d-flex right'>\r\n            <input className='form-control me-2' type='search' placeholder='Search...' aria-label='Search' onKeyUp={searchFunct}></input>\r\n        </form>\r\n    )\r\n}\r\n// Potentially have this component combined with Header?\r\n\r\n// export Search as default\r\nexport default Search;","// import react\r\nimport React from 'react';\r\nimport Search from './Search';\r\n// Create functional header component\r\n// Navbar maybe?\r\nfunction Header(props){\r\n    return (\r\n        <nav className='navbar navbar-dark bg-dark'>\r\n            <span className='navbar-brand mb-01 h1 left'>\r\n                React Employee Directory\r\n            </span>\r\n            <Search searchFunct={props.searchFunct} />\r\n        </nav>\r\n    )\r\n}\r\n\r\n// export Header as default\r\nexport default Header;","// import react\r\nimport React from 'react';\r\n// Create functional TableRow component\r\nfunction TableRow(props){\r\n    return (\r\n        <tr>\r\n            <td>\r\n                <img src={props.picture.thumbnail} alt=\"Employee\"></img>\r\n            </td>\r\n            <td>{`${props.name.title} ${props.name.first} ${props.name.last}`} </td>\r\n            <td>{props.dob.age}</td>\r\n            <td>{props.location.country}</td>\r\n            <td>{props.email}</td>\r\n            <td>{props.phone}</td>\r\n        </tr>\r\n    )\r\n}\r\n// export TableRow as default\r\nexport default TableRow;","// import react\r\nimport React from 'react';\r\n// immport TableRow component\r\nimport TableRow from './TableRow'\r\n// Create functional Table component\r\nfunction Table(props){\r\n// Function to sort the table \r\n    const sort = (e) => {\r\n        const header = e.target.textContent;\r\n        props.sortFunct(header);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='table-responsive tableMarg'>\r\n            <table className='table table-striped table-hover'>\r\n                <thead>\r\n                    <tr>\r\n                        <th className='tblHeading' category='col' onClick={sort}>#</th>\r\n                        <th className='tblHeading' category='col' onClick={sort}>Name</th>\r\n                        <th className='tblHeading' category='col' onClick={sort}>Age</th>\r\n                        <th className='tblHeading' category='col' onClick={sort}>Country</th>\r\n                        <th className='tblHeading' category='col' onClick={sort}>Email</th>\r\n                        <th category='col' onClick={sort}>Phone Number</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {/* Use map() to iterate over employees and render a TableRow component for each */}\r\n                    {props.employees.map((employee) => {\r\n                        /* Create a TableRow component for ea employee */\r\n                        /* Using uid as a key (unique identifier) */\r\n                        /* Passing the whole employee object as props */\r\n                        return <TableRow key={employee.login.uuid} {...employee} />\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n// export Table as default\r\nexport default Table;","import './App.css';\n\n// import react\nimport React from 'react';\n// import components\nimport Header from './components/Header';\nimport Table from './components/Table';\n// import & install axios npm package to handle API calls\nimport axios from 'axios';\n\nclass App extends React.Component {\n  // Declare states\n  state = {\n    employees: {},\n    filteredList: [],\n    ascending: true\n  }\n\n  // GET request to API for user data\n  componentDidMount(){\n    // Set API URL to a variable\n    let API = \"https://randomuser.me/api/?results=25\";\n\n    // Call GET on API\n    axios.get(API).then((res) => {\n      // Once GET request is succesful, set states\n      this.setState({\n        employees: res.data.results,\n        filteredList: res.data.results\n      })\n    })\n  }\n\n  // Function to search\n  search = (query) => {\n    // Filters the employees array and creates a new one; filtered\n    const filtered = this.state.employees.filter((employee) => {\n      // Create a variable called fullName that holds any employee's whole name\n      const fullName = (`${employee.name.title} ${employee.name.first} ${employee.name.last}`).toLowerCase();\n      // Returns any employees whose names include the query term\n      // So employees can be searched by title, first name or last name\n      return fullName.includes(query);\n    })\n    this.setState({filteredList: filtered});\n  }\n\n  // Function to sort name & email in ascending order\n  sortAsc = (arr) => {\n    arr.sort((a, b) => {\n      let personA = (a.name.first + a.name.last).toLowerCase();\n      let personB = (b.name.first + b.name.last).toLowerCase();\n      // localeCompare returns a number (1, 0, -1) depending on whether or not the string comes before, after or is equal\n      // to the compareString in sort order. Also takes into account characters specific to the language set in the user's browser\n      return personA.localeCompare(personB);\n    });\n    this.setState({filteredList: arr});\n  }\n\n  // Function to sort name & email in descending order\n  sortDesc = (arr) => {\n    arr.sort((a, b) => {\n      let personA = (a.name.first + a.name.last).toLowerCase();\n      let personB = (b.name.first + b.name.last).toLowerCase();\n      return personB.localeCompare(personA);\n    });\n    this.setState({filteredList: arr});\n  }\n\n  // Function to sort age in ascending order\n  sortAgeAsc = (arr) => {\n    arr.sort((a, b) => {\n      let personA = a.dob.age;\n      let personB = b.dob.age;\n      return personA - personB;\n    });\n    this.setState({filteredList: arr});\n  }\n\n  // Function to sort age in descending order\n  sortAgeDesc = (arr) => {\n    arr.sort((a, b) => {\n      let personA = a.dob.age;\n      let personB = b.dob.age;\n      return personB - personA;\n    });\n    this.setState({filteredList: arr});\n  }\n\n  // Function to sort country in ascending order\n  sortCountryAsc = (arr) => {\n    arr.sort((a, b) => {\n      let countryA = (a.location.country).toLowerCase();\n      let countryB = (b.location.country).toLowerCase();\n      return countryA.localeCompare(countryB);\n    });\n    this.setState({filteredList: arr});\n  }\n\n  // Function to sort country in descending order\n  sortCountryDesc = (arr) => {\n    arr.sort((a, b) => {\n      let countryA = (a.location.country).toLowerCase();\n      let countryB = (b.location.country).toLowerCase();\n      return countryB.localeCompare(countryA);\n    });\n    this.setState({filteredList: arr});\n  }\n\n  // Function to handle whether to call ascending or descending sort function\n  sort = (header) => {\n    if(header === 'Name' || header === 'Email'){\n      if(this.state.ascending === true){\n        this.sortAsc(this.state.filteredList);\n        this.setState({ascending: false});\n      }\n      if(this.state.ascending === false){\n        this.sortDesc(this.state.filteredList);\n        this.setState({ascending: true});\n      }\n    } else if(header === 'Age'){\n      if(this.state.ascending === true){\n        this.sortAgeAsc(this.state.filteredList);\n        this.setState({ascending: false});\n      }\n      if(this.state.ascending === false){\n        this.sortAgeDesc(this.state.filteredList);\n        this.setState({ascending: true});\n      }\n    } else if(header === 'Country'){\n      if(this.state.ascending === true){\n        this.sortCountryAsc(this.state.filteredList);\n        this.setState({ascending: false});\n      }\n      if(this.state.ascending === false){\n        this.sortCountryDesc(this.state.filteredList);\n        this.setState({ascending: true});\n      }\n    }\n  }\n\n  render(){\n\n    return (\n      // Replace this with what should actually be rendered\n\n      <div className=\"App\">\n        <Header searchFunct = {this.search} />\n        <Table employees = {this.state.filteredList} sortFunct = {this.sort}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import & install css framework package\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}